{"version":3,"sources":["components/Menu/Images/Catalog_Master_Icon.svg","components/Menu/Images/rxjavalogo.png","components/Navbar/Navbar.js","components/Timer/Timer.js","components/Filter/Filter.js","components/Cards/MainCard.js","components/Cards/Cards.js","components/Signin/Signin.js","components/Menu/Menu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","openMenu","className","onClick","placeholder","type","name","id","Timer","props","state","date","Date","this","timerID","setInterval","tick","clearInterval","setState","style","color","padding","toString","substring","Component","Filter","dropdownFilter","document","querySelector","display","href","daterangepicker","MainCard","message","closeMenu","Cards","Signin","onRouteChange","value","Menu","alt","src","Logo","routerlinkactive","Icon","dropdown","particleOptions","App","route","getElementById","width","background","body","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ee82c2a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Catalog_Master_Icon.0ca65cc6.svg\";","module.exports = __webpack_public_path__ + \"static/media/rxjavalogo.1921eb67.png\";","import React from 'react';\r\nimport './Navbar.css'\r\n\r\nconst Navbar = ({openMenu}) => {\r\n  return(\r\n    <div>\r\n      <nav className=\"container bb b--white-10\">\r\n        <span className=\"toggle\" onClick={openMenu}>&#9776;</span>\r\n        <div className=\"wrap\">\r\n          <p className=\"f5 pt1 black-90\">Welcome back, user !</p>\r\n          <input className=\"f6 br2 input-reset pa1 mr4 mt2 ba b--gray\" placeholder=\"Search By Order No\" type=\"text\" name=\"search\" id=\"search\" />\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, {Component} from 'react';\r\n\r\nclass Timer extends Component {\r\n  constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdate: new Date()\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.timerID = setInterval(\r\n\t\t\t() => this.tick(),\r\n\t\t\t1000\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.timerID)\r\n\t}\r\n\r\n\ttick() {\r\n\t\tthis.setState({\r\n\t\t\tdate: new Date()\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div style={{color: 'white', padding: '10px'}}>\r\n\t\t\t\t<p className=\"f7\">{this.state.date.toString().substring('G', '25')}</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Timer;\r\n","import React, {Component} from 'react';\r\nimport './Filter.css';\r\n\r\nclass Filter extends Component {\r\n  dropdownFilter = () => {\r\n    document.querySelector(\".dropdown\").style.display === \"block\"\r\n    ? document.querySelector(\".dropdown\").style.display = \"none\"\r\n    : document.querySelector(\".dropdown\").style.display = \"block\";\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <button className=\"mr4 btn\" href=\"#0\" onClick = {this.dropdownFilter}>\r\n          <span className=\"date-mtd\">WTD<i className=\"down\"></i></span>\r\n        </button>\r\n        <div className=\"dropdown\">\r\n        \t<div className=\"triangle-with-shadow\"></div>\r\n          <ul className=\"pa0 ma0 hover\">\r\n            <li className=\"active\">WTD</li>\r\n            <li className=\"active1\">MTD</li>\r\n            <li className=\"active2\">YTD</li>\r\n            <li daterangepicker=\"\" className=\"active3\">CUSTOM</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport './Cards.css';\r\n\r\nconst MainCard = ({message, closeMenu}) => {\r\n  return(\r\n      <article onClick={closeMenu} className=\"br2 shadow-2 bw2 my-bg\">\r\n      <h6 className=\"pv1 ml3\">{message}</h6>\r\n      <hr/>\r\n      <div className = \"circle\">\r\n        <span className=\"count pv1\">0</span>\r\n      </div>\r\n        <div className=\"pa2 ph3-ns pb3-ns\">\r\n          <section className = \"border\">\r\n            <div>\r\n              <span className=\"count1\">0</span>\r\n              <p>Acceptance SLA about to breach</p>\r\n            </div>\r\n            <div>\r\n              <span className=\"count1\">0</span>\r\n              <p>Invoiced SLA about to breach</p>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </article>\r\n  );\r\n}\r\n\r\nexport default MainCard;\r\n","import React from 'react';\r\nimport MainCard from './MainCard';\r\n\r\nconst Cards = ({ closeMenu }) => {\r\n  return(\r\n    <div className = \"boxes ml4 mr4\">\r\n      <MainCard message = \"NEW ORDERS\" closeMenu = {closeMenu}/>\r\n      <MainCard message = \"TOTAL ORDERS\" closeMenu = {closeMenu}/>\r\n      <MainCard message = \"999 ORDERS\" closeMenu = {closeMenu}/>\r\n      <MainCard message = \"RETURNS\" closeMenu = {closeMenu}/>\r\n      <MainCard message = \"SALES\" closeMenu = {closeMenu}/>\r\n      <MainCard message = \"SALES VS RETURNS\" closeMenu = {closeMenu}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","import React from 'react';\r\nimport './Signin.css';\r\n\r\nconst Signin = ({ onRouteChange }) => {\r\n  return(\r\n    <article className=\"center mw6 pt3 pb4 pl3 pr3 br2 mv5 box-bg\">\r\n      <main className=\"pa4 black-80\">\r\n        <div className=\"measure\">\r\n          <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n            <legend className=\"f4 fw6 ph0 mh0\">Good Morning ! Welcome Back</legend>\r\n            <div className=\"mt3\">\r\n              <input\r\n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                type=\"text\"\r\n                name=\"uname\"\r\n                id=\"uname\"\r\n              />\r\n            </div>\r\n            <div className=\"mv3\">\r\n              <input\r\n                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n              />\r\n            </div>\r\n            <div className=\"container\">\r\n              <label className=\"pa0 ma0 lh-copy f6 pointer\"><input type=\"checkbox\" /> Remember me</label>\r\n              <a href=\"#0\" className=\"f6 link dim black db no-bg\">Forgot password?</a>\r\n            </div>\r\n          </fieldset>\r\n          <div className=\"\">\r\n            <input\r\n              onClick={() => onRouteChange('home')}\r\n              className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n              type=\"submit\"\r\n              value=\"LOGIN\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Signin;\r\n","import React, {Component} from 'react';\r\nimport Logo from './Images/rxjavalogo.png';\r\nimport Icon from './Images/Catalog_Master_Icon.svg';\r\nimport './Menu.css';\r\n\r\nclass Menu extends Component{\r\n  dropdownFilter = () => {\r\n    document.querySelector(\".dropdown1\").style.display === \"block\"\r\n    ? document.querySelector(\".dropdown1\").style.display = \"none\"\r\n    : document.querySelector(\".dropdown1\").style.display = \"block\";\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div id=\"mySidenav\" className=\"sidenav\">\r\n        <div className=\"user-panel pb5\">\r\n          <div className=\"user_profile_circle\">\r\n            <img alt=\"\" src={Logo} />\r\n          </div>\r\n          <div className=\"info\">\r\n            <div className=\"role-name pr4\" onClick = {this.dropdownFilter}>Superadmin<i className=\"down\"></i></div>\r\n            <div className=\"dropdown1\">\r\n            \t<div className=\"triangle-with-shadow\"></div>\r\n              <ul className=\"pa0 ma0 hover\">\r\n                <li className=\"active\">My Profile</li>\r\n                <li className=\"active1\">Change Password</li>\r\n                <li className=\"active2\" onClick = {() => this.props.onRouteChange('signin')}>Logout</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='menu-list f6 fw5 tl'>\r\n          <div id=\"menus-list\">\r\n            <div className=\"sidebar-menu\">\r\n              <div className=\"menu-list\">\r\n                <span>\r\n                  <a routerlinkactive=\"active\" href=\"#active\">\r\n                    <i className=\"menu-icons\">\r\n                      <img src={Icon} alt=\"\" />\r\n                    </i>\r\n                    <span>Dashboard</span>\r\n                  </a>\r\n                  <div className=\"treeview-menu\">\r\n                  </div>\r\n                </span>\r\n                <span>\r\n                  <a routerlinkactive=\"active\" href=\"#active\" className=\"dropdown-btn\" onClick={this.props.dropdown}>\r\n                    <i className=\"menu-icons\">\r\n                      <img src={Icon} alt=\"\" />\r\n                    </i>\r\n                    <span>Order Management</span>\r\n                  </a>\r\n                  <div className=\"nav-dropdown\" id=\"myDropdown\">\r\n                      <a href=\"#active\">Warehouse Order Panel</a>\r\n                      <a href=\"#active\">Store Panel</a>\r\n                      <a href=\"#active\">Order Tracking</a>\r\n                  </div>\r\n                </span>\r\n                <span>\r\n                  <a routerlinkactive=\"active\" href=\"#active\">\r\n                    <i className=\"menu-icons\">\r\n                      <img src={Icon} alt=\"\" />\r\n                    </i>\r\n                    <span>Catalog Management</span>\r\n                  </a>\r\n                  <div className=\"treeview-menu\">\r\n                  </div>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","import React, {Component} from 'react';\nimport Navbar from './components/Navbar/Navbar';\nimport Timer from './components/Timer/Timer';\nimport Filter from './components/Filter/Filter';\nimport Cards from './components/Cards/Cards';\nimport Signin from './components/Signin/Signin';\nimport Menu from './components/Menu/Menu';\nimport Particles from 'react-particles-js';\nimport './App.css';\n\nconst particleOptions = {\n  \"particles\": {\n      \"number\": {\n          \"value\": 80,\n          \"density\": {\n            \"enable\": true,\n            \"value_area\": 800\n          }\n      },\n      \"size\": {\n          \"value\": 3,\n          \"anim\": {\n            \"speed\": 40\n          }\n      }\n  },\n  \"interactivity\": {\n      \"events\": {\n          \"onhover\": {\n              \"enable\": true,\n              \"mode\": \"repulse\"\n          }\n      }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      route: 'signin'\n    }\n  }\n\n  onRouteChange = (route) => {\n    this.setState({route: route})\n  }\n\n  openMenu = () => {\n    document.getElementById(\"mySidenav\").style.width = \"250px\";\n    document.getElementById(\"root\").style.background = \"rgba(0,0,0,0.4)\";\n  }\n\n  closeMenu = () => {\n    document.getElementById(\"mySidenav\").style.width = \"0\";\n    document.getElementById(\"root\").style.background = document.body.style.background;;\n  }\n\n  dropdown = () => {\n    document.querySelector(\".nav-dropdown\").style.display === \"block\"\n    ? document.getElementById(\"myDropdown\").style.display = \"none\"\n    : document.querySelector(\".nav-dropdown\").style.display = \"block\";\n  }\n\n  render() {\n    return(\n      <div className=\"App\">\n        <Particles className=\"particles\"\n          params={particleOptions}\n        />\n        {\n          this.state.route === 'signin'\n          ? <Signin onRouteChange={this.onRouteChange}/>\n          : <div>\n              <Navbar openMenu={this.openMenu}/>\n              <div className=\"body\">\n                <div className=\"container pv2\">\n                  <Timer />\n                  <Filter />\n                </div>\n                <Cards closeMenu={this.closeMenu} />\n                <Menu dropdown={this.dropdown} onRouteChange={this.onRouteChange}/>\n              </div>\n            </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'tachyons';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}